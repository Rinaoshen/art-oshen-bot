```python
import os
import asyncio
import logging
from datetime import datetime, timedelta
import aiohttp
from bs4 import BeautifulSoup
from telegram import Bot
from telegram.ext import Application, CommandHandler, MessageHandler, filters
import schedule
import time
import json
import hashlib
from dataclasses import dataclass, asdict
from typing import List, Dict, Optional
import re

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

@dataclass
class Opportunity:
    title: str
    description: str
    deadline: str
    source: str
    url: str
    category: str  # grant, residency, open_call, competition
    location: str = ""
    fee: str = ""
    
    def to_telegram_message(self) -> str:
        category_emoji = {
            'grant': 'üí∞',
            'residency': 'üè†',
            'open_call': 'üì¢',
            'competition': 'üèÜ',
            'exhibition': 'üé®'
        }
        
        emoji = category_emoji.get(self.category, 'üìã')
        
        message = f"{emoji} **{self.title}**\n\n"
        message += f"üìÖ **–î–µ–¥–ª–∞–π–Ω:** {self.deadline}\n"
        message += f"üåç **–õ–æ–∫–∞—Ü–∏—è:** {self.location}\n" if self.location else ""
        message += f"üíµ **–í–∑–Ω–æ—Å:** {self.fee}\n" if self.fee else ""
        message += f"üìù **–û–ø–∏—Å–∞–Ω–∏–µ:** {self.description[:300]}{'...' if len(self.description) > 300 else ''}\n\n"
        message += f"üîó [–ü–æ–¥—Ä–æ–±–Ω–µ–µ]({self.url})\n"
        message += f"üìä **–ò—Å—Ç–æ—á–Ω–∏–∫:** {self.source}"
        
        return message

class ArtOceanBot:
    def __init__(self, telegram_token: str):
        self.bot = Bot(token=telegram_token)
        self.application = Application.builder().token(telegram_token).build()
        self.subscribers = set()
        self.seen_opportunities = set()
        self.load_data()
        
        # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
        self.application.add_handler(CommandHandler("start", self.start_command))
        self.application.add_handler(CommandHandler("help", self.help_command))
        self.application.add_handler(CommandHandler("subscribe", self.subscribe_command))
        self.application.add_handler(CommandHandler("unsubscribe", self.unsubscribe_command))
        self.application.add_handler(CommandHandler("status", self.status_command))
        
    def load_data(self):
        """–ó–∞–≥—Ä—É–∑–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö"""
        try:
            with open('subscribers.json', 'r') as f:
                self.subscribers = set(json.load(f))
        except FileNotFoundError:
            self.subscribers = set()
            
        try:
            with open('seen_opportunities.json', 'r') as f:
                self.seen_opportunities = set(json.load(f))
        except FileNotFoundError:
            self.seen_opportunities = set()
    
    def save_data(self):
        """–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö"""
        with open('subscribers.json', 'w') as f:
            json.dump(list(self.subscribers), f)
            
        with open('seen_opportunities.json', 'w') as f:
            json.dump(list(self.seen_opportunities), f)
    
    async def start_command(self, update, context):
        """–ö–æ–º–∞–Ω–¥–∞ /start"""
        welcome_text = """
üé®üåä **–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Art Ocean Bot!**

–Ø –æ–∫–µ–∞–Ω –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π –¥–ª—è —Ö—É–¥–æ–∂–Ω–∏–∫–æ–≤! –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –º–æ–Ω–∏—Ç–æ—Ä—é —Å–∞–π—Ç—ã –∏ –Ω–∞—Ö–æ–∂—É –Ω–æ–≤—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:
‚Ä¢ üí∞ –ì—Ä–∞–Ω—Ç—ã
‚Ä¢ üè† –ê—Ä—Ç-—Ä–µ–∑–∏–¥–µ–Ω—Ü–∏–∏  
‚Ä¢ üì¢ Open Call'—ã
‚Ä¢ üèÜ –ö–æ–Ω–∫—É—Ä—Å—ã
‚Ä¢ üé® –í—ã—Å—Ç–∞–≤–∫–∏

**–ö–æ–º–∞–Ω–¥—ã:**
/subscribe - –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
/unsubscribe - –æ—Ç–ø–∏—Å–∞—Ç—å—Å—è
/status - –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏
/help - –ø–æ–º–æ—â—å

üåä –ù–∞–∂–º–∏—Ç–µ /subscribe —á—Ç–æ–±—ã –ø–æ–≥—Ä—É–∑–∏—Ç—å—Å—è –≤ –æ–∫–µ–∞–Ω –∞—Ä—Ç-–≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π!
        """
        await update.message.reply_text(welcome_text, parse_mode='Markdown')
    
    async def help_command(self, update, context):
        """–ö–æ–º–∞–Ω–¥–∞ /help"""
        help_text = """
ü§ñüåä **–°–ø—Ä–∞–≤–∫–∞ –ø–æ Art Ocean Bot**

**–ß—Ç–æ —è —É–º–µ—é:**
‚Ä¢ –ú–æ–Ω–∏—Ç–æ—Ä—é 15+ —Å–∞–π—Ç–æ–≤ —Å –∞—Ä—Ç-–≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º–∏
‚Ä¢ –û—Ç–ø—Ä–∞–≤–ª—è—é —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤—ã—Ö –æ—Ç–∫—Ä—ã—Ç—ã—Ö –∑–∞—è–≤–∫–∞—Ö
‚Ä¢ –§–∏–ª—å—Ç—Ä—É—é –¥—É–±–ª–∏–∫–∞—Ç—ã
‚Ä¢ –†–∞–±–æ—Ç–∞—é 24/7 –∫–∞–∫ –æ–∫–µ–∞–Ω—Å–∫–∏–µ –≤–æ–ª–Ω—ã

**–ò—Å—Ç–æ—á–Ω–∏–∫–∏:**
‚Ä¢ ArtConnect, ArtRabbit, ArtForum
‚Ä¢ e-flux, Artist-Opportunities.org
‚Ä¢ –ö—Ä—É–ø–Ω—ã–µ –≥–∞–ª–µ—Ä–µ–∏ (Tate, Gagosian, etc.)
‚Ä¢ –ò –º–Ω–æ–≥–∏–µ –¥—Ä—É–≥–∏–µ

**–ö–æ–º–∞–Ω–¥—ã:**
/start - –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É
/subscribe - –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è
/unsubscribe - –æ—Ç–ø–∏—Å–∞—Ç—å—Å—è  
/status - —Å—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏

üåä –û–∫–µ–∞–Ω –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π –∂–¥–µ—Ç –≤–∞—Å!
        """
        await update.message.reply_text(help_text, parse_mode='Markdown')
    
    async def subscribe_command(self, update, context):
        """–ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è"""
        user_id = update.effective_user.id
        self.subscribers.add(user_id)
        self.save_data()
        
        await update.message.reply_text(
            "‚úÖüåä –í—ã –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ Art Ocean Bot!\n"
            "–¢–µ–ø–µ—Ä—å —è –±—É–¥—É –ø—Ä–∏—Å—ã–ª–∞—Ç—å –≤–∞–º –≤—Å–µ –Ω–æ–≤—ã–µ –∞—Ä—Ç-–≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –∏–∑ –æ–∫–µ–∞–Ω–∞ —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–∞.",
            parse_mode='Markdown'
        )
    
    async def unsubscribe_command(self, update, context):
        """–û—Ç–ø–∏—Å–∫–∞ –æ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π"""
        user_id = update.effective_user.id
        self.subscribers.discard(user_id)
        self.save_data()
        
        await update.message.reply_text(
            "‚ùå –í—ã –æ—Ç–ø–∏—Å–∞–ª–∏—Å—å –æ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π.\n"
            "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /subscribe —á—Ç–æ–±—ã –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è —Å–Ω–æ–≤–∞.",
            parse_mode='Markdown'
        )
    
    async def status_command(self, update, context):
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –ø–æ–¥–ø–∏—Å–∫–∏"""
        user_id = update.effective_user.id
        is_subscribed = user_id in self.subscribers
        
        status = "‚úÖ –ü–æ–¥–ø–∏—Å–∞–Ω" if is_subscribed else "‚ùå –ù–µ –ø–æ–¥–ø–∏—Å–∞–Ω"
        total_subscribers = len(self.subscribers)
        
        await update.message.reply_text(
            f"üìä **–í–∞—à —Å—Ç–∞—Ç—É—Å:** {status}\n"
            f"üë• **–í—Å–µ–≥–æ –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤:** {total_subscribers}\n"
            f"üîç **–ù–∞–π–¥–µ–Ω–æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π:** {len(self.seen_opportunities)}",
            parse_mode='Markdown'
        )

def main():
    # 8035302373:AAESvCdIqKUaZkIb8Zsw9izWPV7mcHwCiFQ
    
    
    if BOT_TOKEN == '8035302373:AAESvCdIqKUaZkIb8Zsw9izWPV7mcHwCiFQ':
        logger.error("Please set TELEGRAM_BOT_TOKEN environment variable")
        return
    
    # –°–æ–∑–¥–∞–µ–º –±–æ—Ç–∞
    art_bot = ArtOceanBot(8035302373:AAESvCdIqKUaZkIb8Zsw9izWPV7mcHwCiFQ)
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    logger.info("üöÄüåä Starting Art Ocean Bot...")
    art_bot.application.run_polling()

if __name__ == '__main__':
    main()
